language: cpp
sudo: required

matrix:
  include:

  # Linux GCC Builds
  - os: linux
    dist: trusty
    compiler: gcc
    addons: &gcc-49-addons
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
        - python3.5
        - g++-4.9
        - gcc-4.9
        - libboost-system-dev
        - libboost-filesystem-dev
    env: CXX_COMPILER='g++-4.9' C_COMPILER='gcc-4.9' BUILD_TYPE='Release'

  - os: linux
    dist: trusty
    compiler: gcc
    addons: &gcc5-addons
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
        - python3.5
        - g++-5
        - gcc-5
        - libboost-system-dev
        - libboost-filesystem-dev
    env: CXX_COMPILER='g++-5' C_COMPILER='gcc-5' BUILD_TYPE='Release'


  # OSX Clang Builds
  - os: osx
    osx_image: xcode6.4
    compiler: clang
    env: CXX_COMPILER='clang++' C_COMPILER='clang'  BUILD_TYPE='Release'

  - os: osx
    osx_image: xcode7.3
    compiler: clang
    env: CXX_COMPILER='clang++' C_COMPILER='clang' BUILD_TYPE='Release'


install:

# install osx system dependencies
- |
  if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
    brew update
    
    brew unlink python3
    brew install python3
    
    brew unlink cmake
    brew install cmake
    CMAKE_EXECUTABLE=cmake
  fi
 

# install, activate and configure python virtual environment
- python3 -m venv env
- source env/bin/activate

- python build_ll.py init

# configure boost if needed 
- |
  if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
    python build_ll.py bootstrap
  else
    python build_ll.py bootstrap --without boost
  fi


- python build_ll.py configure
- python build_ll.py build -w
  
script:
- |
  cd ./build
  if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
    xcodebuild -alltargets -configuration Release
  else
    make        
  fi

- cd ../bin/release
- ./ll_systeminfo_test -s -r junit -o test-report.junit.xml
